version: '3.1'

services:
  
  users-api:
    image: virtualfinland/usersapi:latest
    build:
      context: ./VirtualFinland.UserAPI/src/VirtualFinland.UsersAPI
      dockerfile: ${USERAPI_DOCKERFILE:-Dockerfile}
    ports:
      - "5001:80"
    depends_on:
      postgres-db:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: dev
      CONNECTIONSTRINGS__DEFAULTCONNECTION: Host=postgres-db;Database=postgres;Username=postgres;Password=example
      AWS_REGION: eu-north-1
      Serilog__WriteTo__1__Args__uri: http//loki:3100
    networks:
      - vfd-network

  postgres-db:
    image: postgres:14
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: example
    volumes:
      - postgres-db:/var/lib/postgresql/data
    networks:
      - vfd-network
  
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - type: bind
        source: ./prometheus-local-config.yml
        target: /etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - vfd-network
  
  loki:
    image: grafana/loki:latest
    volumes:
      - ./loki-local-config.yaml:/etc/loki/config.yaml
    ports:
      - "3100:3100"
      - "9096:9096"
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - vfd-network
  
  grafana:
    image: grafana/grafana-enterprise:latest
    ports:
      - "3000:3000"
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - vfd-network

volumes:
  postgres-db:

networks:
  vfd-network:
    external: true
    driver: bridge
