name: Deploy CloudFront log forwarder to selected environment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Environment where to deploy the stack (dev, staging)
        type: environment
        required: true
        
env:
  PULUMI_ORGANIZATION: virtualfinland
        
permissions:
  id-token: write
  contents: read

jobs:
  
  build:
    name: Build Lambda function
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Install AWS dotnet CLI Lambda Tools
        run: dotnet tool install -g Amazon.Lambda.Tools

      - name: Build function Lambda package
        run: dotnet lambda package
        working-directory: ./cloudfront-log-forwarder/src

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Function_Artifact
          path: cloudfront-log-forwarder/src/bin/Release/net6.0/src.zip
          retention-days: 1
            
  deploy:
    name: Deploy function to AWS ${{ inputs.environment }} environment
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
    defaults:
      run:
        working-directory: cloudfront-log-forwarder
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          cache: npm
          cache-dependency-path: cloudfront-log-forwarder/package-lock.json
      - uses: pulumi/actions@v4
      - uses: actions/download-artifact@v3
        with:
          name: Function_Artifact
          path: ./cloudfront-log-forwarder/

      - name: Select Pulumi stack
        run: pulumi stack select ${{ env.PULUMI_ORGANIZATION }}/${{ inputs.environment }} --create

      - name: Set Pulumi artifact path
        run: pulumi config set applicationArtifactPath src.zip

      - name: Configure AWS credentials
        uses: Virtual-Finland-Development/infrastructure/.github/actions/configure-aws-credentials@main
        with:
          environment: ${{ inputs.environment }}
          aws-region: ${{ secrets.AWS_REGION }}
          pulumi-access-token: ${{ secrets.PULUMI_ACCESS_TOKEN }}

      - name: Pulumi deploy
        run: pulumi up -y

      - name: Tag the deployment
        uses: Virtual-Finland-Development/automatic-release-action@v1.0
        if: ${{ inputs.environment == 'staging' }}
        with:
          environment: ${{ inputs.environment }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
